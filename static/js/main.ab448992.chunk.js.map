{"version":3,"sources":["api/api.js","components/Comment.jsx","components/CommentList.jsx","components/Post.jsx","components/PostList.jsx","App.jsx","index.js"],"names":["URL","getPosts","fetch","concat","then","res","json","getUsers","getComments","Comments","_ref","comment","react_default","a","createElement","key","id","className","href","name","body","email","CommentList","props","comments","map","Comment","Post","post","title","user","address","city","street","suite","components_CommentList","PostList","posts","this","components_Post","Component","App","state","isLoaded","buttonInnerText","buttonStyle","loadPosts","_callee","event","_ref2","_ref3","users","cooments","response","regenerator_default","wrap","_context","prev","next","target","blur","_this","setState","Promise","all","sent","Object","slicedToArray","groupeAllData","t0","message","stop","objectSpread","find","userId","filter","postId","_this2","_this$state","components_PostList","type","onClick","React","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ab448992.chunk.js","sourcesContent":["const URL = \"https://jsonplaceholder.typicode.com\";\r\n\r\nexport const getPosts = () => {\r\n  return fetch(`${URL}/posts`)\r\n  .then(res => res.json());\r\n};\r\n\r\nexport const getUsers = () => {\r\n  return fetch(`${URL}/users`)\r\n  .then(res => res.json());\r\n};\r\n\r\nexport const getComments = () => {\r\n  return fetch(`${URL}/comments`)\r\n  .then(res => res.json());\r\n};\r\n","import React from \"react\";\r\n\r\nconst Comments = ({ comment }) => {\r\n  return (\r\n    <section key={comment.id} className=\"post__comment\">\r\n      <span className=\"comment__name\">\r\n        <a href=\"#/\">{comment.name}</a>\r\n      </span>\r\n      <span className=\"comment__body\">{comment.body}</span>\r\n      <span className=\"comment__email\">\r\n        <a href=\"#/\">{comment.email}</a>\r\n      </span>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import React from \"react\";\r\nimport Comment from \"./Comment\";\r\n\r\nconst CommentList = props => {\r\n  const { comments } = props;\r\n\r\n  return (\r\n    <section className=\"post__comments\">\r\n      {comments.map(comment => (\r\n        <Comment comment={comment} />\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n","import React from \"react\";\r\nimport CommentList from \"./CommentList\";\r\n\r\nconst Post = props => {\r\n  const { post } = props;\r\n\r\n  return (\r\n    <section className=\"post\" key={post.id}>\r\n      <span className=\"post__title\">{post.title}</span>\r\n      <span className=\"post__author-name\">\r\n        <a href=\"#/\">{post.user.name}</a>\r\n      </span>\r\n      <span className=\"post__body\">{post.body}</span>\r\n      <span className=\"post__email\">\r\n        <a href=\"#/\">{post.user.email}</a>\r\n      </span>\r\n      <span className=\"post__address\">\r\n        <a href=\"#/\">\r\n          {post.user.address.city} {post.user.address.street}{\" \"}\r\n          {post.user.address.suite}\r\n        </a>\r\n      </span>\r\n      <CommentList comments={post.comments} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { Component } from \"react\";\r\nimport Post from \"./Post\";\r\n\r\nclass PostList extends Component {\r\n  render() {\r\n    const { posts } = this.props;\r\n\r\n    return (\r\n      <div className=\"postList\">\r\n        {posts.map(post => (\r\n          <Post post={post} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostList;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport { getPosts, getUsers, getComments } from \"./api/api\";\nimport PostList from \"./components/PostList\";\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    isLoaded: false,\n    buttonInnerText: \"Press Me!\",\n    buttonStyle: \"\"\n  };\n\n  loadPosts = async event => {\n    event.target.blur();\n\n    this.setState({\n      buttonInnerText: \"Loading...\"\n    });\n\n    try {\n      let [posts, users, cooments] = await Promise.all([\n        getPosts(),\n        getUsers(),\n        getComments()\n      ]);\n\n      let response = this.groupeAllData(posts, users, cooments);\n\n      this.setState({\n        posts: response,\n        isLoaded: true\n      });\n    } catch (err) {\n      this.setState({\n        buttonStyle: \"error\",\n        buttonInnerText: `${err.message}`\n      });\n    }\n  };\n\n  groupeAllData = (posts, users, comments) => {\n    return posts.map(post => ({\n      ...post,\n      user: users.find(user => post.userId === user.id),\n      comments: comments.filter(comment => comment.postId === post.id)\n    }));\n  };\n\n  render() {\n    const { posts, isLoaded, buttonStyle } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"myFancyBlock\">\n          {isLoaded ? (\n            <PostList posts={posts} />\n          ) : (\n            <button\n              type=\"button\"\n              onClick={event => this.loadPosts(event)}\n              className={`loadPostsButton ` + buttonStyle}\n            >\n              {this.state.buttonInnerText}\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}