{"version":3,"sources":["api/api.js","components/Comment.jsx","components/CommentList.jsx","components/Post.jsx","components/PostList.jsx","components/SearchField.jsx","App.jsx","index.js"],"names":["URL","getPosts","fetch","concat","then","res","json","getUsers","getComments","Comments","_ref","comment","react_default","a","createElement","className","href","name","body","email","CommentList","props","comments","map","Comment","key","id","Post","post","title","user","address","city","street","suite","components_CommentList","PostList","posts","this","components_Post","Component","SearchField","searchFieldValue","updateSerachFieldValue","searchInPosts","type","placeholder","value","onChange","event","autoComplete","App","state","isLoaded","buttonStatus","buttonInnerText","buttonStyle","loadPosts","_callee","_ref2","_ref3","users","cooments","regenerator_default","wrap","_context","prev","next","_this","setState","Promise","all","sent","Object","slicedToArray","groupAllData","t0","message","stop","objectSpread","find","userId","filter","postId","postToRneder","toLowerCase","test","replace","includes","target","_this$state","postsToRender","Fragment","components_SearchField","components_PostList","onClick","disabled","React","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.37b08bb0.chunk.js","sourcesContent":["const URL = \"https://jsonplaceholder.typicode.com\";\r\n\r\nexport const getPosts = () => {\r\n  return fetch(`${URL}/posts`)\r\n    .then(res => res.json());\r\n};\r\n\r\nexport const getUsers = () => {\r\n  return fetch(`${URL}/users`)\r\n    .then(res => res.json());\r\n};\r\n\r\nexport const getComments = () => {\r\n  return fetch(`${URL}/comments`)\r\n    .then(res => res.json());\r\n};\r\n","import React from \"react\";\r\n\r\nconst Comments = ({ comment }) => {\r\n  return (\r\n    <section className=\"post__comment\">\r\n      <span className=\"comment__name\">\r\n        <a href=\"#/\">{comment.name}</a>\r\n      </span>\r\n      <span className=\"comment__body\">{comment.body}</span>\r\n      <span className=\"comment__email\">\r\n        <a href=\"#/\">{comment.email}</a>\r\n      </span>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import React from \"react\";\r\nimport Comment from \"./Comment\";\r\n\r\nconst CommentList = props => {\r\n  const { comments } = props;\r\n\r\n  return (\r\n    <section className=\"post__comments\">\r\n      {comments.map(comment => (\r\n        <Comment comment={comment} key={comment.id} />\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n","import React from \"react\";\r\nimport CommentList from \"./CommentList\";\r\n\r\nconst Post = props => {\r\n  const { post } = props;\r\n\r\n  return (\r\n    <section className=\"post\">\r\n      <span className=\"post__title\">{post.title}</span>\r\n      <span className=\"post__author-name\">\r\n        <a href=\"#/\">{post.user.name}</a>\r\n      </span>\r\n      <span className=\"post__body\">{post.body}</span>\r\n      <span className=\"post__email\">\r\n        <a href=\"#/\">{post.user.email}</a>\r\n      </span>\r\n      <span className=\"post__address\">\r\n        <a href=\"#/\">\r\n          {post.user.address.city} {post.user.address.street}{\" \"}\r\n          {post.user.address.suite}\r\n        </a>\r\n      </span>\r\n      <CommentList comments={post.comments} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { Component } from \"react\";\r\nimport Post from \"./Post\";\r\n\r\n\r\nclass PostList extends Component {\r\n  render() {\r\n    const { posts } = this.props;\r\n\r\n    return (\r\n      <div className=\"postList\">\r\n        {posts.map(post => (\r\n          <Post post={post} key={post.id} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostList;\r\n","import React from \"react\";\r\n\r\nconst SearchField = ({\r\n  searchFieldValue,\r\n  searchInPosts,\r\n  updateSerachFieldValue\r\n}) => {\r\n  return (\r\n    <input\r\n      className=\"searchField\"\r\n      type=\"text\"\r\n      placeholder=\"Search by title and text...\"\r\n      value={searchFieldValue}\r\n      onChange={event => updateSerachFieldValue(event)}\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchField;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport { getPosts, getUsers, getComments } from \"./api/api\";\nimport PostList from \"./components/PostList\";\nimport SearchField from \"./components/SearchField\";\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    isLoaded: false,\n    buttonStatus: false,\n    buttonInnerText: \"Press Me!\",\n    buttonStyle: \"\",\n    searchFieldValue: \"\"\n  };\n\n  loadPosts = async event => {\n    this.setState({\n      buttonInnerText: \"Loading...\",\n      buttonStatus: true\n    });\n\n    try {\n      const [posts, users, cooments] = await Promise.all([\n        getPosts(),\n        getUsers(),\n        getComments()\n      ]);\n\n      this.setState({\n        posts: this.groupAllData(posts, users, cooments),\n        isLoaded: true\n      });\n    } catch (err) {\n      this.setState({\n        buttonStyle: \"error\",\n        buttonInnerText: `${err.message}`\n      });\n    }\n  };\n\n  groupAllData = (posts, users, comments) => {\n    return posts.map(post => ({\n      ...post,\n      user: users.find(user => post.userId === user.id),\n      comments: comments.filter(comment => comment.postId === post.id)\n    }));\n  };\n\n  postToRneder = event => {\n    const searchFieldValue = this.state.searchFieldValue.toLowerCase();\n\n    if (/^ *$/.test(searchFieldValue)) {\n      return;\n    } else {\n      return this.state.posts.filter(\n        post =>\n          post.title\n            .replace(/(\\r\\n|\\n|\\r)/gm, \" \")\n            .includes(searchFieldValue) ||\n          post.body\n            .replace(/(\\r\\n|\\n|\\r)/gm, \" \")\n            .includes(searchFieldValue)\n      );\n    }\n  };\n\n  updateSerachFieldValue = event => {\n    this.setState({\n      searchFieldValue: event.target.value\n    });\n  };\n\n  render() {\n    const {\n      posts,\n      isLoaded,\n      buttonStyle,\n      buttonStatus,\n      searchFieldValue\n    } = this.state;\n\n    let postsToRender = this.postToRneder() || posts;\n\n    return (\n      <div className=\"App\">\n        <div className=\"myFancyBlock\">\n          {isLoaded ? (\n            <>\n              <SearchField\n                searchFieldValue={searchFieldValue}\n                updateSerachFieldValue={this.updateSerachFieldValue}\n              />\n              <PostList posts={postsToRender} />\n            </>\n          ) : (\n            <button\n              type=\"button\"\n              onClick={this.loadPosts}\n              className={`loadPostsButton ` + buttonStyle}\n              disabled={buttonStatus}\n            >\n              {this.state.buttonInnerText}\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}