{"version":3,"sources":["api/api.js","components/Comment.jsx","components/CommentList.jsx","components/Post.jsx","components/PostList.jsx","components/SearchField.jsx","components/Button.jsx","App.jsx","index.js"],"names":["URL","getPosts","fetch","concat","then","res","json","getUsers","getComments","Comments","_ref","comment","react_default","a","createElement","className","href","name","body","email","CommentList","props","comments","map","Comment","key","id","Post","post","title","user","address","city","street","suite","components_CommentList","PostList","posts","this","components_Post","Component","SearchField","searchFieldValue","updateSerachFieldValue","type","placeholder","value","onChange","autoComplete","Button","buttonInnerText","buttonStyle","loadPosts","buttonStatus","errorText","Fragment","onClick","disabled","App","state","isLoaded","_this","setState","setTimeout","Object","asyncToGenerator","regenerator_default","mark","_callee","_ref2","_ref3","users","cooments","wrap","_context","prev","next","Promise","all","sent","slicedToArray","groupAllData","t0","message","stop","objectSpread","find","userId","filter","postId","postToRender","event","trim","toLowerCase","includes","target","_this$state","postsToRender","components_SearchField","components_PostList","components_Button","React","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.cf13718e.chunk.js","sourcesContent":["const URL = \"https://jsonplaceholder.typicode.com\";\r\n\r\nexport const getPosts = () => {\r\n  return fetch(`${URL}/posts`).then(res => res.json());\r\n};\r\n\r\nexport const getUsers = () => {\r\n  return fetch(`${URL}/users`).then(res => res.json());\r\n};\r\n\r\nexport const getComments = () => {\r\n  return fetch(`${URL}/comments`).then(res => res.json());\r\n};\r\n","import React from \"react\";\r\n\r\nconst Comments = ({ comment }) => {\r\n  return (\r\n    <section className=\"post__comment\">\r\n      <span className=\"comment__name\">\r\n        <a href=\"#/\">{comment.name}</a>\r\n      </span>\r\n      <span className=\"comment__body\">{comment.body}</span>\r\n      <span className=\"comment__email\">\r\n        <a href=\"#/\">{comment.email}</a>\r\n      </span>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import React from \"react\";\r\nimport Comment from \"./Comment\";\r\n\r\nconst CommentList = props => {\r\n  const { comments } = props;\r\n\r\n  return (\r\n    <section className=\"post__comments\">\r\n      {comments.map(comment => (\r\n        <Comment comment={comment} key={comment.id} />\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n","import React from \"react\";\r\nimport CommentList from \"./CommentList\";\r\n\r\nconst Post = props => {\r\n  const { post } = props;\r\n\r\n  return (\r\n    <section className=\"post\">\r\n      <span className=\"post__title\">{post.title}</span>\r\n      <span className=\"post__author-name\">\r\n        <a href=\"#/\">{post.user.name}</a>\r\n      </span>\r\n      <span className=\"post__body\">{post.body}</span>\r\n      <span className=\"post__email\">\r\n        <a href=\"#/\">{post.user.email}</a>\r\n      </span>\r\n      <span className=\"post__address\">\r\n        <a href=\"#/\">\r\n          {post.user.address.city} {post.user.address.street}{\" \"}\r\n          {post.user.address.suite}\r\n        </a>\r\n      </span>\r\n      <CommentList comments={post.comments} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { Component } from \"react\";\r\nimport Post from \"./Post\";\r\n\r\n\r\nclass PostList extends Component {\r\n  render() {\r\n    const { posts } = this.props;\r\n\r\n    return (\r\n      <div className=\"postList\">\r\n        {posts.map(post => (\r\n          <Post post={post} key={post.id} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostList;\r\n","import React from \"react\";\r\n\r\nconst SearchField = ({ searchFieldValue, updateSerachFieldValue }) => {\r\n  return (\r\n    <input\r\n      type=\"search\"\r\n      className=\"searchField\"\r\n      placeholder=\"Search by title and text...\"\r\n      value={searchFieldValue}\r\n      onChange={updateSerachFieldValue}\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchField;\r\n","import React from \"react\";\r\n\r\nconst Button = ({ loadPosts, buttonStatus, errorText }) => {\r\n  let buttonInnerText;\r\n  let buttonStyle;\r\n\r\n  switch (buttonStatus) {\r\n    case buttonStatus || errorText:\r\n      buttonInnerText = \"Loading...\";\r\n      buttonStyle = \"\";\r\n      break;\r\n    case !errorText:\r\n      buttonInnerText = \"Try Again\";\r\n      buttonStyle = \"error\";\r\n      break;\r\n    default:\r\n      buttonInnerText = \"Press Me\";\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        type=\"button\"\r\n        onClick={loadPosts}\r\n        className={`loadPostsButton ${buttonStyle}`}\r\n        disabled={buttonStatus}\r\n      >\r\n        {buttonInnerText}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport { getPosts, getUsers, getComments } from \"./api/api\";\nimport PostList from \"./components/PostList\";\nimport SearchField from \"./components/SearchField\";\nimport Button from \"./components/Button\";\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    isLoaded: false,\n    buttonStatus: false,\n    searchFieldValue: \"\",\n    errorText: \"\"\n  };\n\n  loadPosts = () => {\n    this.setState({\n      buttonStatus: true,\n      errorText: \"\"\n    });\n\n    // Bad internet connection simulation\n    setTimeout(async () => {\n      try {\n        const [posts, users, cooments] = await Promise.all([\n          getPosts(),\n          getUsers(),\n          getComments()\n        ]);\n\n        this.setState({\n          posts: this.groupAllData(posts, users, cooments),\n          isLoaded: true\n        });\n      } catch (err) {\n        this.setState({\n          isLoaded: false,\n          buttonStatus: false,\n          errorText: err.message\n        });\n      }\n    }, 1333);\n  };\n\n  groupAllData = (posts, users, comments) => {\n    return posts.map(post => ({\n      ...post,\n      user: users.find(user => post.userId === user.id),\n      comments: comments.filter(comment => comment.postId === post.id)\n    }));\n  };\n\n  postToRender = event => {\n    const searchFieldValue = this.state.searchFieldValue.trim().toLowerCase();\n\n    if (!searchFieldValue.trim()) {\n      return;\n    }\n\n    return this.state.posts.filter(\n      post =>\n        post.title.trim().includes(searchFieldValue) ||\n        post.body.trim().includes(searchFieldValue)\n    );\n  };\n\n  updateSerachFieldValue = event => {\n    this.setState({\n      searchFieldValue: event.target.value\n    });\n  };\n\n  render() {\n    const {\n      posts,\n      isLoaded,\n      errorText,\n      buttonStatus,\n      searchFieldValue\n    } = this.state;\n\n    let postsToRender = this.postToRender() || posts;\n\n    return (\n      <div className=\"App\">\n        <div className=\"myFancyBlock\">\n          {isLoaded ? (\n            <>\n              <SearchField\n                searchFieldValue={searchFieldValue}\n                updateSerachFieldValue={this.updateSerachFieldValue}\n              />\n              <PostList posts={postsToRender} />\n            </>\n          ) : (\n            <>\n              <Button\n                errorText={errorText}\n                loadPosts={this.loadPosts}\n                buttonStatus={buttonStatus}\n              />\n              <div className=\"error__message\">{errorText}</div>\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}