{"version":3,"sources":["api/api.js","components/Comment.jsx","components/CommentList.jsx","components/Post.jsx","components/PostList.jsx","App.jsx","index.js"],"names":["getPosts","fetch","then","res","json","getUsers","getComments","Comments","props","comment","react_default","a","createElement","Fragment","className","href","name","body","email","CommentList","comments","map","key","id","Comment","Post","post","title","user","address","city","street","suite","components_CommentList","PostList","data","this","components_Post","Component","App","state","loadData","event","target","innerText","setTimeout","Object","asyncToGenerator","regenerator_default","mark","_callee","_ref2","_ref3","POSTS","USERS","COMMENTS","DATA","wrap","_context","prev","next","Promise","all","sent","slicedToArray","_this","groupeAllData","setState","stop","objectSpread","find","userId","filter","postId","_this2","console","log","length","components_PostList","type","onClick","React","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.158fecb7.chunk.js","sourcesContent":["export const getPosts = () => {\r\n  return fetch(\"https://jsonplaceholder.typicode.com/posts\").then(res =>\r\n    res.json()\r\n  );\r\n};\r\n\r\nexport const getUsers = () => {\r\n  return fetch(\"https://jsonplaceholder.typicode.com/users\").then(res =>\r\n    res.json()\r\n  );\r\n};\r\n\r\nexport const getComments = () => {\r\n  return fetch(\"https://jsonplaceholder.typicode.com/comments\").then(res =>\r\n    res.json()\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst Comments = props => {\r\n  const { comment } = props;\r\n  return (\r\n    <>\r\n      <span className=\"comment__name\"><a href=\"#/\">{comment.name}</a></span>\r\n      <span className=\"comment__body\">{comment.body}</span>\r\n      <span className=\"comment__email\"><a href=\"#/\">{comment.email}</a></span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import React from \"react\";\r\nimport Comment from \"./Comment\";\r\n\r\nconst CommentList = props => {\r\n  const { comments } = props;\r\n\r\n  return comments.map(comment => (\r\n    <section key={comment.id} className=\"post__comment\">\r\n      <Comment comment={comment} />\r\n    </section>\r\n  ));\r\n};\r\n\r\nexport default CommentList;\r\n","import React from \"react\";\r\nimport CommentList from \"./CommentList\";\r\n\r\nconst Post = props => {\r\n  const { post } = props;\r\n\r\n  return (\r\n    <>\r\n      <span className=\"post__title\">{post.title}</span>\r\n      <span className=\"post__author-name\">\r\n        <a href=\"#/\">{post.user.name}</a>\r\n      </span>\r\n      <span className=\"post__body\">{post.body}</span>\r\n      <span className=\"post__email\">\r\n        <a href=\"#/\">{post.user.email}</a>\r\n      </span>\r\n      <span className=\"post__address\">\r\n        <a href=\"#/\">\r\n          {post.user.address.city} {post.user.address.street}{\" \"}\r\n          {post.user.address.suite}\r\n        </a>\r\n      </span>\r\n      <section className=\"post__comments\">\r\n        <CommentList comments={post.comments} />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { Component } from \"react\";\r\nimport Post from \"./Post\";\r\n\r\nclass PostList extends Component {\r\n  render() {\r\n    const { data } = this.props;\r\n\r\n    return (\r\n      <div className=\"postList\">\r\n        {data.map(post => (\r\n          <section key={post.id} className=\"post\">\r\n            <Post post={post} />\r\n          </section>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostList;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { getPosts, getUsers, getComments } from \"./api/api\";\nimport PostList from \"./components/PostList\";\n\nclass App extends React.Component {\n  state = {\n    data: []\n  };\n\n  loadData = event => {\n    event.target.innerText = \"Loading...\";\n    // Server response emulation\n    setTimeout(async () => {\n      const [POSTS, USERS, COMMENTS] = await Promise.all([\n        getPosts(),\n        getUsers(),\n        getComments()\n      ]);\n      const DATA = this.groupeAllData(POSTS, USERS, COMMENTS);\n\n      this.setState({\n        data: DATA\n      });\n    }, 350);\n  };\n\n  groupeAllData = (POSTS, USERS, COMMENTS) => {\n    return POSTS.map(post => ({\n      ...post,\n      user: USERS.find(user => post.userId === user.id),\n      comments: COMMENTS.filter(comment => comment.postId === post.id)\n    }));\n  };\n\n  render() {\n    const { data } = this.state;\n    console.log(data);\n    return (\n      <div className=\"App\">\n        <div className=\"myFancyBlock\">\n          {!data.length ? (\n            <button\n              type=\"button\"\n              onClick={event => this.loadData(event)}\n              className=\"loadDataButton\"\n            >\n              Press ME!\n            </button>\n          ) : (\n            <PostList data={data} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}